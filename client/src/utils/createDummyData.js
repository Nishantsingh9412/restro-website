const nameList = [
  "Time",
  "Past",
  "Future",
  "Dev",
  "Fly",
  "Flying",
  "Soar",
  "Soaring",
  "Power",
  "Falling",
  "Fall",
  "Jump",
  "Cliff",
  "Mountain",
  "Rend",
  "Red",
  "Blue",
  "Green",
  "Yellow",
  "Gold",
  "Demon",
  "Demonic",
  "Panda",
  "Cat",
  "Kitty",
  "Kitten",
  "Zero",
  "Memory",
  "Trooper",
  "XX",
  "Bandit",
  "Fear",
  "Light",
  "Glow",
  "Tread",
  "Deep",
  "Deeper",
  "Deepest",
  "Mine",
  "Your",
  "Worst",
  "Enemy",
  "Hostile",
  "Force",
  "Video",
  "Game",
  "Donkey",
  "Mule",
  "Colt",
  "Cult",
  "Cultist",
  "Magnum",
  "Gun",
  "Assault",
  "Recon",
  "Trap",
  "Trapper",
  "Redeem",
  "Code",
  "Script",
  "Writer",
  "Near",
  "Close",
  "Open",
  "Cube",
  "Circle",
  "Geo",
  "Genome",
  "Germ",
  "Spaz",
  "Shot",
  "Echo",
  "Beta",
  "Alpha",
  "Gamma",
  "Omega",
  "Seal",
  "Squid",
  "Money",
  "Cash",
  "Lord",
  "King",
  "Duke",
  "Rest",
  "Fire",
  "Flame",
  "Morrow",
  "Break",
  "Breaker",
  "Numb",
  "Ice",
  "Cold",
  "Rotten",
  "Sick",
  "Sickly",
  "Janitor",
  "Camel",
  "Rooster",
  "Sand",
  "Desert",
  "Dessert",
  "Hurdle",
  "Racer",
  "Eraser",
  "Erase",
  "Big",
  "Small",
  "Short",
  "Tall",
  "Sith",
  "Bounty",
  "Hunter",
  "Cracked",
  "Broken",
  "Sad",
  "Happy",
  "Joy",
  "Joyful",
  "Crimson",
  "Destiny",
  "Deceit",
  "Lies",
  "Lie",
  "Honest",
  "Destined",
  "Bloxxer",
  "Hawk",
  "Eagle",
  "Hawker",
  "Walker",
  "Zombie",
  "Sarge",
  "Capt",
  "Captain",
  "Punch",
  "One",
  "Two",
  "Uno",
  "Slice",
  "Slash",
  "Melt",
  "Melted",
  "Melting",
  "Fell",
  "Wolf",
  "Hound",
  "Legacy",
  "Sharp",
  "Dead",
  "Mew",
  "Chuckle",
  "Bubba",
  "Bubble",
  "Sandwich",
  "Smasher",
  "Extreme",
  "Multi",
  "Universe",
  "Ultimate",
  "Death",
  "Ready",
  "Monkey",
  "Elevator",
  "Wrench",
  "Grease",
  "Head",
  "Theme",
  "Grand",
  "Cool",
  "Kid",
  "Boy",
  "Girl",
  "Vortex",
  "Paradox",
];
const times = [
  "00:00",
  "00:30",
  "01:00",
  "01:30",
  "02:00",
  "02:30",
  "03:00",
  "03:30",
  "04:00",
  "04:30",
  "05:00",
  "05:30",
  "06:00",
  "06:30",
  "07:00",
  "07:30",
  "08:00",
  "08:30",
  "09:00",
  "09:30",
  "10:00",
  "10:30",
  "11:00",
  "11:30",
  "12:00",
  "12:30",
  "13:00",
  "13:30",
  "14:00",
  "14:30",
  "15:00",
  "15:30",
  "16:00",
  "16:30",
  "17:00",
  "17:30",
  "18:00",
  "18:30",
  "19:00",
  "19:30",
  "20:00",
  "20:30",
  "21:00",
  "21:30",
  "22:00",
  "22:30",
  "23:00",
  "23:30",
];

const randNum = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;

const randFloatingNum = (min, max, dec) =>
  Number(Math.random() * (max - min + 1) + min).toFixed(dec);

const randFromArr = (arr) => arr[Math.floor(Math.random() * arr.length)];

const randArrOfLength = (arr, length) =>
  Array.from({ length }, () => randFromArr(arr));

const randArrOfRandLength = (arr, min, max) =>
  Array.from({ length: randNum(min, max) }, () => randFromArr(arr));

const arrOfRandLength = (item, min, max) =>
  Array.from({ length: randNum(min, max) }, () => item);

const randBool = () => randFromArr([true, false]);

const getRandName = (first = false) =>
  first
    ? randFromArr(nameList)
    : randFromArr(nameList) + " " + randFromArr(nameList);

const randNumStringOfLength = (length, canFirstDigitBeZero = true) =>
  canFirstDigitBeZero
    ? Array.from({ length }, () => randNum(0, 9)).join("")
    : [randNum(1, 9), ...randNumStringOfLength(length - 1)].join("");

const createDummyCities = (length) =>
  Array.from({ length }, (_, i) => {
    const isActive = randBool();
    return {
      _id: i + 1,
      city_name: getRandName(),
      city_image: `https://picsum.photos/id/${randNum(1, 1000)}/400/200`,
      isActive,
      showOnHomepage: isActive && randBool(),
      regions_list: Array.from(
        new Set(Array.from({ length: randNum(3, 6) }, () => randNum(1, 9)))
      ),
      createdAt: new Date(),
    };
  });

const dummyOrderItems = (length) =>
  Array.from({ length }, () => ({
    name: getRandName(),
    pricePerUnit: randNum(10, 100) * 10,
    units: randNum(1, 3),
  }));

export const createDummyDeliveries = (length) =>
  Array.from({ length }, (_, i) => ({
    _id: i + 1,
    orderId: i + 1,
    pickupLocation: {
      lat: 28.4089,
      lng: 77.3178,
    },
    deliveryLocation: {
      lat: 28.7041,
      lng: 77.1025,
    },
    distance: randNum(100, 2000),
    estimatedTime: randNum(1, 60),
    orderItems: dummyOrderItems(randNum(2, 4)),
    customerName: getRandName(),
    customerContact: randNumStringOfLength(10),
    restaurantName: getRandName(),
    restaurantImage: `https://picsum.photos/id/${randNum(1, 1000)}/200/200`,
    paymentType: randFromArr(["prepaid", "COD"]),
    currentStatus: "Available",
    statusHistory: [
      {
        status: "Available",
        updatedAt: new Date(),
      },
    ],
    assignedTo: randNum(1, 5), // null initially
    timeTaken: randNum(10, 30), // null initially
    completedAt: new Date(), // null initially

    createdAt: new Date(),
    updatedAt: new Date(),
  }));

export const createDummyNotifications = (length) =>
  Array.from({ length }, (_, i) => ({
    _id: i + 1,
    sender: randNum(1, 10),
    receiver: randNum(1, 10),
    heading: "Delivery accepted",
    body: "Delivery Personnel accepted delivery for order #122323",
    createdAt: new Date(),
  }));
